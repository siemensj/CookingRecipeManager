/*
 * generated by Xtext 2.12.0
 */
grammar InternalRecipeDSL;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.services.RecipeDSLGrammarAccess;

}
@parser::members {
	private RecipeDSLGrammarAccess grammarAccess;

	public void setGrammarAccess(RecipeDSLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getMgrAssignment()); }
		(rule__Model__MgrAssignment)
		{ after(grammarAccess.getModelAccess().getMgrAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleManager
entryRuleManager
:
{ before(grammarAccess.getManagerRule()); }
	 ruleManager
{ after(grammarAccess.getManagerRule()); } 
	 EOF 
;

// Rule Manager
ruleManager 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getManagerAccess().getGroup()); }
		(rule__Manager__Group__0)
		{ after(grammarAccess.getManagerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUser
entryRuleUser
:
{ before(grammarAccess.getUserRule()); }
	 ruleUser
{ after(grammarAccess.getUserRule()); } 
	 EOF 
;

// Rule User
ruleUser 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUserAccess().getNameAssignment()); }
		(rule__User__NameAssignment)
		{ after(grammarAccess.getUserAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRecipe
entryRuleRecipe
:
{ before(grammarAccess.getRecipeRule()); }
	 ruleRecipe
{ after(grammarAccess.getRecipeRule()); } 
	 EOF 
;

// Rule Recipe
ruleRecipe 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRecipeAccess().getGroup()); }
		(rule__Recipe__Group__0)
		{ after(grammarAccess.getRecipeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLevel
entryRuleLevel
:
{ before(grammarAccess.getLevelRule()); }
	 ruleLevel
{ after(grammarAccess.getLevelRule()); } 
	 EOF 
;

// Rule Level
ruleLevel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLevelAccess().getGroup()); }
		(rule__Level__Group__0)
		{ after(grammarAccess.getLevelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIngredient
entryRuleIngredient
:
{ before(grammarAccess.getIngredientRule()); }
	 ruleIngredient
{ after(grammarAccess.getIngredientRule()); } 
	 EOF 
;

// Rule Ingredient
ruleIngredient 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIngredientAccess().getAlternatives()); }
		(rule__Ingredient__Alternatives)
		{ after(grammarAccess.getIngredientAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWeight
entryRuleWeight
:
{ before(grammarAccess.getWeightRule()); }
	 ruleWeight
{ after(grammarAccess.getWeightRule()); } 
	 EOF 
;

// Rule Weight
ruleWeight 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWeightAccess().getGroup()); }
		(rule__Weight__Group__0)
		{ after(grammarAccess.getWeightAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCount
entryRuleCount
:
{ before(grammarAccess.getCountRule()); }
	 ruleCount
{ after(grammarAccess.getCountRule()); } 
	 EOF 
;

// Rule Count
ruleCount 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCountAccess().getGroup()); }
		(rule__Count__Group__0)
		{ after(grammarAccess.getCountAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDevice
entryRuleDevice
:
{ before(grammarAccess.getDeviceRule()); }
	 ruleDevice
{ after(grammarAccess.getDeviceRule()); } 
	 EOF 
;

// Rule Device
ruleDevice 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeviceAccess().getGroup()); }
		(rule__Device__Group__0)
		{ after(grammarAccess.getDeviceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCooking
entryRuleCooking
:
{ before(grammarAccess.getCookingRule()); }
	 ruleCooking
{ after(grammarAccess.getCookingRule()); } 
	 EOF 
;

// Rule Cooking
ruleCooking 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCookingAccess().getGroup()); }
		(rule__Cooking__Group__0)
		{ after(grammarAccess.getCookingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTime
entryRuleTime
:
{ before(grammarAccess.getTimeRule()); }
	 ruleTime
{ after(grammarAccess.getTimeRule()); } 
	 EOF 
;

// Rule Time
ruleTime 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimeAccess().getGroup()); }
		(rule__Time__Group__0)
		{ after(grammarAccess.getTimeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStep
entryRuleStep
:
{ before(grammarAccess.getStepRule()); }
	 ruleStep
{ after(grammarAccess.getStepRule()); } 
	 EOF 
;

// Rule Step
ruleStep 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStepAccess().getGroup()); }
		(rule__Step__Group__0)
		{ after(grammarAccess.getStepAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEFloat
entryRuleEFloat
:
{ before(grammarAccess.getEFloatRule()); }
	 ruleEFloat
{ after(grammarAccess.getEFloatRule()); } 
	 EOF 
;

// Rule EFloat
ruleEFloat 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEFloatAccess().getGroup()); }
		(rule__EFloat__Group__0)
		{ after(grammarAccess.getEFloatAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ingredient__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIngredientAccess().getGroup_0()); }
		(rule__Ingredient__Group_0__0)
		{ after(grammarAccess.getIngredientAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getIngredientAccess().getCountParserRuleCall_1()); }
		ruleCount
		{ after(grammarAccess.getIngredientAccess().getCountParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Weight__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWeightAccess().getMgKeyword_1_0()); }
		'mg'
		{ after(grammarAccess.getWeightAccess().getMgKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getWeightAccess().getGKeyword_1_1()); }
		'g'
		{ after(grammarAccess.getWeightAccess().getGKeyword_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getWeightAccess().getKgKeyword_1_2()); }
		'kg'
		{ after(grammarAccess.getWeightAccess().getKgKeyword_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getWeightAccess().getTKeyword_1_3()); }
		't'
		{ after(grammarAccess.getWeightAccess().getTKeyword_1_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Time__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeAccess().getSecKeyword_2_0()); }
		'sec'
		{ after(grammarAccess.getTimeAccess().getSecKeyword_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getTimeAccess().getMinKeyword_2_1()); }
		'min'
		{ after(grammarAccess.getTimeAccess().getMinKeyword_2_1()); }
	)
	|
	(
		{ before(grammarAccess.getTimeAccess().getHKeyword_2_2()); }
		'h'
		{ after(grammarAccess.getTimeAccess().getHKeyword_2_2()); }
	)
	|
	(
		{ before(grammarAccess.getTimeAccess().getDKeyword_2_3()); }
		'd'
		{ after(grammarAccess.getTimeAccess().getDKeyword_2_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Alternatives_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEFloatAccess().getEKeyword_4_0_0()); }
		'E'
		{ after(grammarAccess.getEFloatAccess().getEKeyword_4_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEFloatAccess().getEKeyword_4_0_1()); }
		'e'
		{ after(grammarAccess.getEFloatAccess().getEKeyword_4_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Manager__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Manager__Group__0__Impl
	rule__Manager__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Manager__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getManagerAccess().getRecipebookKeyword_0()); }
	'Recipebook'
	{ after(grammarAccess.getManagerAccess().getRecipebookKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Manager__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Manager__Group__1__Impl
	rule__Manager__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Manager__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getManagerAccess().getNameAssignment_1()); }
	(rule__Manager__NameAssignment_1)
	{ after(grammarAccess.getManagerAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Manager__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Manager__Group__2__Impl
	rule__Manager__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Manager__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getManagerAccess().getFromKeyword_2()); }
	'from'
	{ after(grammarAccess.getManagerAccess().getFromKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Manager__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Manager__Group__3__Impl
	rule__Manager__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Manager__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getManagerAccess().getUserAssignment_3()); }
	(rule__Manager__UserAssignment_3)
	{ after(grammarAccess.getManagerAccess().getUserAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Manager__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Manager__Group__4__Impl
	rule__Manager__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Manager__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getManagerAccess().getGroup_4()); }
	(rule__Manager__Group_4__0)*
	{ after(grammarAccess.getManagerAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Manager__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Manager__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Manager__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getManagerAccess().getRecipesAssignment_5()); }
	(rule__Manager__RecipesAssignment_5)*
	{ after(grammarAccess.getManagerAccess().getRecipesAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Manager__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Manager__Group_4__0__Impl
	rule__Manager__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Manager__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getManagerAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getManagerAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Manager__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Manager__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Manager__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getManagerAccess().getUserAssignment_4_1()); }
	(rule__Manager__UserAssignment_4_1)
	{ after(grammarAccess.getManagerAccess().getUserAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Recipe__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Recipe__Group__0__Impl
	rule__Recipe__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Recipe__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecipeAccess().getRecipeKeyword_0()); }
	'Recipe'
	{ after(grammarAccess.getRecipeAccess().getRecipeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Recipe__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Recipe__Group__1__Impl
	rule__Recipe__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Recipe__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecipeAccess().getNameAssignment_1()); }
	(rule__Recipe__NameAssignment_1)
	{ after(grammarAccess.getRecipeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Recipe__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Recipe__Group__2__Impl
	rule__Recipe__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Recipe__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecipeAccess().getLevelAssignment_2()); }
	(rule__Recipe__LevelAssignment_2)
	{ after(grammarAccess.getRecipeAccess().getLevelAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Recipe__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Recipe__Group__3__Impl
	rule__Recipe__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Recipe__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getRecipeAccess().getIngredientAssignment_3()); }
		(rule__Recipe__IngredientAssignment_3)
		{ after(grammarAccess.getRecipeAccess().getIngredientAssignment_3()); }
	)
	(
		{ before(grammarAccess.getRecipeAccess().getIngredientAssignment_3()); }
		(rule__Recipe__IngredientAssignment_3)*
		{ after(grammarAccess.getRecipeAccess().getIngredientAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Recipe__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Recipe__Group__4__Impl
	rule__Recipe__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Recipe__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getRecipeAccess().getDeviceAssignment_4()); }
		(rule__Recipe__DeviceAssignment_4)
		{ after(grammarAccess.getRecipeAccess().getDeviceAssignment_4()); }
	)
	(
		{ before(grammarAccess.getRecipeAccess().getDeviceAssignment_4()); }
		(rule__Recipe__DeviceAssignment_4)*
		{ after(grammarAccess.getRecipeAccess().getDeviceAssignment_4()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Recipe__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Recipe__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Recipe__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getRecipeAccess().getCookingAssignment_5()); }
		(rule__Recipe__CookingAssignment_5)
		{ after(grammarAccess.getRecipeAccess().getCookingAssignment_5()); }
	)
	(
		{ before(grammarAccess.getRecipeAccess().getCookingAssignment_5()); }
		(rule__Recipe__CookingAssignment_5)*
		{ after(grammarAccess.getRecipeAccess().getCookingAssignment_5()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Level__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Level__Group__0__Impl
	rule__Level__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Level__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLevelAccess().getLevelKeyword_0()); }
	'Level'
	{ after(grammarAccess.getLevelAccess().getLevelKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Level__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Level__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Level__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLevelAccess().getRatingAssignment_1()); }
	(rule__Level__RatingAssignment_1)
	{ after(grammarAccess.getLevelAccess().getRatingAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Ingredient__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ingredient__Group_0__0__Impl
	rule__Ingredient__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ingredient__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIngredientAccess().getIngredientKeyword_0_0()); }
	'Ingredient'
	{ after(grammarAccess.getIngredientAccess().getIngredientKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ingredient__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ingredient__Group_0__1__Impl
	rule__Ingredient__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ingredient__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIngredientAccess().getNameAssignment_0_1()); }
	(rule__Ingredient__NameAssignment_0_1)
	{ after(grammarAccess.getIngredientAccess().getNameAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ingredient__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ingredient__Group_0__2__Impl
	rule__Ingredient__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Ingredient__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIngredientAccess().getAmountKeyword_0_2()); }
	'amount'
	{ after(grammarAccess.getIngredientAccess().getAmountKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ingredient__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ingredient__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ingredient__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIngredientAccess().getMeasureAssignment_0_3()); }
	(rule__Ingredient__MeasureAssignment_0_3)
	{ after(grammarAccess.getIngredientAccess().getMeasureAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Weight__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Weight__Group__0__Impl
	rule__Weight__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Weight__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWeightAccess().getWeightAssignment_0()); }
	(rule__Weight__WeightAssignment_0)
	{ after(grammarAccess.getWeightAccess().getWeightAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Weight__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Weight__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Weight__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWeightAccess().getAlternatives_1()); }
	(rule__Weight__Alternatives_1)
	{ after(grammarAccess.getWeightAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Count__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Count__Group__0__Impl
	rule__Count__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Count__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCountAccess().getCAssignment_0()); }
	(rule__Count__CAssignment_0)
	{ after(grammarAccess.getCountAccess().getCAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Count__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Count__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Count__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCountAccess().getPiecesKeyword_1()); }
	'pieces'
	{ after(grammarAccess.getCountAccess().getPiecesKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Device__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Device__Group__0__Impl
	rule__Device__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeviceAccess().getDeviceKeyword_0()); }
	'Device'
	{ after(grammarAccess.getDeviceAccess().getDeviceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Device__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeviceAccess().getNameAssignment_1()); }
	(rule__Device__NameAssignment_1)
	{ after(grammarAccess.getDeviceAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Cooking__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cooking__Group__0__Impl
	rule__Cooking__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cooking__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCookingAccess().getStepKeyword_0()); }
	'Step'
	{ after(grammarAccess.getCookingAccess().getStepKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cooking__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cooking__Group__1__Impl
	rule__Cooking__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Cooking__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCookingAccess().getSAssignment_1()); }
	(rule__Cooking__SAssignment_1)
	{ after(grammarAccess.getCookingAccess().getSAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cooking__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cooking__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cooking__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCookingAccess().getGroup_2()); }
	(rule__Cooking__Group_2__0)
	{ after(grammarAccess.getCookingAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Cooking__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cooking__Group_2__0__Impl
	rule__Cooking__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cooking__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCookingAccess().getTimeAssignment_2_0()); }
	(rule__Cooking__TimeAssignment_2_0)
	{ after(grammarAccess.getCookingAccess().getTimeAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cooking__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cooking__Group_2__1__Impl
	rule__Cooking__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Cooking__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCookingAccess().getCommaKeyword_2_1()); }
	','
	{ after(grammarAccess.getCookingAccess().getCommaKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cooking__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cooking__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cooking__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCookingAccess().getStepAssignment_2_2()); }
	(rule__Cooking__StepAssignment_2_2)
	{ after(grammarAccess.getCookingAccess().getStepAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Time__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Time__Group__0__Impl
	rule__Time__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Time__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeAccess().getForKeyword_0()); }
	'For'
	{ after(grammarAccess.getTimeAccess().getForKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Time__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Time__Group__1__Impl
	rule__Time__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Time__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeAccess().getTimeAssignment_1()); }
	(rule__Time__TimeAssignment_1)
	{ after(grammarAccess.getTimeAccess().getTimeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Time__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Time__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Time__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeAccess().getAlternatives_2()); }
	(rule__Time__Alternatives_2)
	{ after(grammarAccess.getTimeAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Step__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Step__Group__0__Impl
	rule__Step__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepAccess().getUseKeyword_0()); }
	'Use'
	{ after(grammarAccess.getStepAccess().getUseKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Step__Group__1__Impl
	rule__Step__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepAccess().getDevAssignment_1()); }
	(rule__Step__DevAssignment_1)
	{ after(grammarAccess.getStepAccess().getDevAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Step__Group__2__Impl
	rule__Step__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepAccess().getGroup_2()); }
	(rule__Step__Group_2__0)*
	{ after(grammarAccess.getStepAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Step__Group__3__Impl
	rule__Step__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepAccess().getWithKeyword_3()); }
	'with'
	{ after(grammarAccess.getStepAccess().getWithKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Step__Group__4__Impl
	rule__Step__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepAccess().getIngAssignment_4()); }
	(rule__Step__IngAssignment_4)
	{ after(grammarAccess.getStepAccess().getIngAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Step__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepAccess().getGroup_5()); }
	(rule__Step__Group_5__0)*
	{ after(grammarAccess.getStepAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Step__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Step__Group_2__0__Impl
	rule__Step__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getStepAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Step__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepAccess().getDev2Assignment_2_1()); }
	(rule__Step__Dev2Assignment_2_1)
	{ after(grammarAccess.getStepAccess().getDev2Assignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Step__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Step__Group_5__0__Impl
	rule__Step__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepAccess().getCommaKeyword_5_0()); }
	','
	{ after(grammarAccess.getStepAccess().getCommaKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Step__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepAccess().getIng2Assignment_5_1()); }
	(rule__Step__Ing2Assignment_5_1)
	{ after(grammarAccess.getStepAccess().getIng2Assignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EFloat__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EFloat__Group__0__Impl
	rule__EFloat__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEFloatAccess().getHyphenMinusKeyword_0()); }
	('-')?
	{ after(grammarAccess.getEFloatAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EFloat__Group__1__Impl
	rule__EFloat__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEFloatAccess().getINTTerminalRuleCall_1()); }
	(RULE_INT)?
	{ after(grammarAccess.getEFloatAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EFloat__Group__2__Impl
	rule__EFloat__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEFloatAccess().getFullStopKeyword_2()); }
	'.'
	{ after(grammarAccess.getEFloatAccess().getFullStopKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EFloat__Group__3__Impl
	rule__EFloat__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEFloatAccess().getINTTerminalRuleCall_3()); }
	RULE_INT
	{ after(grammarAccess.getEFloatAccess().getINTTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EFloat__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEFloatAccess().getGroup_4()); }
	(rule__EFloat__Group_4__0)?
	{ after(grammarAccess.getEFloatAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EFloat__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EFloat__Group_4__0__Impl
	rule__EFloat__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEFloatAccess().getAlternatives_4_0()); }
	(rule__EFloat__Alternatives_4_0)
	{ after(grammarAccess.getEFloatAccess().getAlternatives_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EFloat__Group_4__1__Impl
	rule__EFloat__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEFloatAccess().getHyphenMinusKeyword_4_1()); }
	('-')?
	{ after(grammarAccess.getEFloatAccess().getHyphenMinusKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EFloat__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEFloatAccess().getINTTerminalRuleCall_4_2()); }
	RULE_INT
	{ after(grammarAccess.getEFloatAccess().getINTTerminalRuleCall_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__MgrAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getMgrManagerParserRuleCall_0()); }
		ruleManager
		{ after(grammarAccess.getModelAccess().getMgrManagerParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Manager__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getManagerAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getManagerAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Manager__UserAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getManagerAccess().getUserUserParserRuleCall_3_0()); }
		ruleUser
		{ after(grammarAccess.getManagerAccess().getUserUserParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Manager__UserAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getManagerAccess().getUserUserParserRuleCall_4_1_0()); }
		ruleUser
		{ after(grammarAccess.getManagerAccess().getUserUserParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Manager__RecipesAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getManagerAccess().getRecipesRecipeParserRuleCall_5_0()); }
		ruleRecipe
		{ after(grammarAccess.getManagerAccess().getRecipesRecipeParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__User__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUserAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getUserAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Recipe__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRecipeAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRecipeAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Recipe__LevelAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRecipeAccess().getLevelLevelParserRuleCall_2_0()); }
		ruleLevel
		{ after(grammarAccess.getRecipeAccess().getLevelLevelParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Recipe__IngredientAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRecipeAccess().getIngredientIngredientParserRuleCall_3_0()); }
		ruleIngredient
		{ after(grammarAccess.getRecipeAccess().getIngredientIngredientParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Recipe__DeviceAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRecipeAccess().getDeviceDeviceParserRuleCall_4_0()); }
		ruleDevice
		{ after(grammarAccess.getRecipeAccess().getDeviceDeviceParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Recipe__CookingAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRecipeAccess().getCookingCookingParserRuleCall_5_0()); }
		ruleCooking
		{ after(grammarAccess.getRecipeAccess().getCookingCookingParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Level__RatingAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLevelAccess().getRatingRATINGTerminalRuleCall_1_0()); }
		RULE_RATING
		{ after(grammarAccess.getLevelAccess().getRatingRATINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ingredient__NameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIngredientAccess().getNameIDTerminalRuleCall_0_1_0()); }
		RULE_ID
		{ after(grammarAccess.getIngredientAccess().getNameIDTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ingredient__MeasureAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIngredientAccess().getMeasureWeightParserRuleCall_0_3_0()); }
		ruleWeight
		{ after(grammarAccess.getIngredientAccess().getMeasureWeightParserRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Weight__WeightAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWeightAccess().getWeightEFloatParserRuleCall_0_0()); }
		ruleEFloat
		{ after(grammarAccess.getWeightAccess().getWeightEFloatParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Count__CAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCountAccess().getCINTTerminalRuleCall_0_0()); }
		RULE_INT
		{ after(grammarAccess.getCountAccess().getCINTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeviceAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getDeviceAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cooking__SAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCookingAccess().getSINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getCookingAccess().getSINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cooking__TimeAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCookingAccess().getTimeTimeParserRuleCall_2_0_0()); }
		ruleTime
		{ after(grammarAccess.getCookingAccess().getTimeTimeParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cooking__StepAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCookingAccess().getStepStepParserRuleCall_2_2_0()); }
		ruleStep
		{ after(grammarAccess.getCookingAccess().getStepStepParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Time__TimeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeAccess().getTimeINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getTimeAccess().getTimeINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__DevAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStepAccess().getDevDeviceCrossReference_1_0()); }
		(
			{ before(grammarAccess.getStepAccess().getDevDeviceIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getStepAccess().getDevDeviceIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getStepAccess().getDevDeviceCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Dev2Assignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStepAccess().getDev2DeviceCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getStepAccess().getDev2DeviceIDTerminalRuleCall_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getStepAccess().getDev2DeviceIDTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getStepAccess().getDev2DeviceCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__IngAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStepAccess().getIngIngredientCrossReference_4_0()); }
		(
			{ before(grammarAccess.getStepAccess().getIngIngredientIDTerminalRuleCall_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getStepAccess().getIngIngredientIDTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getStepAccess().getIngIngredientCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Ing2Assignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStepAccess().getIng2IngredientCrossReference_5_1_0()); }
		(
			{ before(grammarAccess.getStepAccess().getIng2IngredientIDTerminalRuleCall_5_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getStepAccess().getIng2IngredientIDTerminalRuleCall_5_1_0_1()); }
		)
		{ after(grammarAccess.getStepAccess().getIng2IngredientCrossReference_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_RATING : '1'..'5';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
