import "platform:/resource/RecipeLanguage/model/RecipeLanguage.ecore"

pattern oneCooking() {
	c: Cooking
}

pattern oneIngredient(){
	i: Ingredient
}

pattern oneDevice(){
	d: Device
}

pattern oneRecipe(){
	r: Recipe
}

pattern cookingWithoutName{
	c: Cooking{
		.Description == ""
	}
}

pattern cookingWithoutTime {
	c:Cooking{
		.Time <=0 // mit Time <0 funktioniert es nicht muss sehr kleiner Wert sein
	}	
}

pattern ingredientWithoutName{
	i: Ingredient{
		.Name == ""
	}
}
pattern deviceWithoutName{
	d: Device{
		.Name == ""
	}
}
pattern recipeWithoutName{
	r: Recipe{
		.Name == ""
	}
}

pattern cookingWithDevice(){
	c: Cooking{
		-use_device->d
	}
	d: Device
}

pattern cookingWithoutIngredient(){
	c: Cooking
	i: Ingredient
}

pattern noDevFromOtherRecipe{
	r: Recipe{
		-devices -> d
		-cookings->c
	}
	r2:Recipe{
		-devices-> d2
	}
	d:Device
	d2:Device
	c:Cooking{
		-use_device->d2
	}
}

pattern noIngFromOtherRecipe{
	r: Recipe{
		-ingredients -> d
		-cookings->c
	}
	r2:Recipe{
		-ingredients-> d2
	}
	d:Ingredient
	d2:Ingredient
	c:Cooking{
		-uses->d2
	}
}

pattern doubleIngredient{
	r: Recipe{
		-ingredients -> i
		-ingredients -> ii
	}
	i: Ingredient{
		.Name == ii.Name
	}
	ii: Ingredient{
		.Name == i.Name
	}
}

pattern doubleCookingStep{
	r: Recipe{
		-cookings -> c
		-cookings -> cc
	}
	
	c: Cooking{
		.Step == cc.Step
	}
	
	cc:Cooking{
		.Step == c.Step
	}
	
}