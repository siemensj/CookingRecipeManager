import "platform:/resource/RecipeLanguage/model/RecipeLanguage.ecore"

pattern oneCooking() {
	c: Cooking
}

pattern oneIngredient(){
	i: Ingredient
}

pattern oneDevice(){
	d: Device
}

pattern oneRecipe(){
	r: Recipe
}

pattern cookingWithoutName{
	c: Cooking{
		.Description == ""
	}
}
pattern ingredientWithoutName{
	i: Ingredient{
		.Name == ""
	}
}
pattern deviceWithoutName{
	d: Device{
		.Name == ""
	}
}
pattern recipeWithoutName{
	r: Recipe{
		.Name == ""
	}
}

pattern cookingWithDevice(){
	c: Cooking{
		-use_device->d
	}
	d: Device
}

pattern cookingWithoutIngredient(){
	c: Cooking
	i: Ingredient
}

pattern correctRecipe(){
	r: Recipe{
		.Name != ""
		-cookings -> c
		-devices -> d
		-ingredients -> i
	}
	c: Cooking
	d: Device
	i: Ingredient
}

pattern doubleIngredient{
	r: Recipe{
		-ingredients -> i
		-ingredients -> ii
	}
	i: Ingredient{
		.Name == ii.Name
	}
	ii: Ingredient{
		.Name == i.Name
	}
}


pattern recCooDevIng refines correctRecipe, oneCooking, oneDevice, oneIngredient

//condition recipeWithoutName = forbid recWithoutName
//condition recipeWithName = enforce correctRecipe

//rule delDuplicateIng refines doubleIngredient{
//	r: Recipe{
//		-- -ingredients -> ii
//	}
//	-- ii: Ingredient
//}

//rule delRecipe refines recWithoutName{
//	-- r:Recipe
//}
