/*
 * generated by Xtext 2.12.0
 */
grammar InternalRecipeDSL;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.RecipeDSLGrammarAccess;

}

@parser::members {

 	private RecipeDSLGrammarAccess grammarAccess;

    public InternalRecipeDSLParser(TokenStream input, RecipeDSLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected RecipeDSLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getRecipesRecipeParserRuleCall_0());
			}
			lv_recipes_0_0=ruleRecipe
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				add(
					$current,
					"recipes",
					lv_recipes_0_0,
					"org.xtext.example.mydsl.RecipeDSL.Recipe");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleRecipe
entryRuleRecipe returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRecipeRule()); }
	iv_ruleRecipe=ruleRecipe
	{ $current=$iv_ruleRecipe.current; }
	EOF;

// Rule Recipe
ruleRecipe returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Recipe'
		{
			newLeafNode(otherlv_0, grammarAccess.getRecipeAccess().getRecipeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getRecipeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRecipeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRecipeAccess().getIngredientIngredientParserRuleCall_2_0());
				}
				lv_ingredient_2_0=ruleIngredient
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRecipeRule());
					}
					add(
						$current,
						"ingredient",
						lv_ingredient_2_0,
						"org.xtext.example.mydsl.RecipeDSL.Ingredient");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getRecipeAccess().getDeviceDeviceParserRuleCall_3_0());
				}
				lv_device_3_0=ruleDevice
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRecipeRule());
					}
					add(
						$current,
						"device",
						lv_device_3_0,
						"org.xtext.example.mydsl.RecipeDSL.Device");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getRecipeAccess().getCookingCookingParserRuleCall_4_0());
				}
				lv_cooking_4_0=ruleCooking
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRecipeRule());
					}
					add(
						$current,
						"cooking",
						lv_cooking_4_0,
						"org.xtext.example.mydsl.RecipeDSL.Cooking");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleIngredient
entryRuleIngredient returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIngredientRule()); }
	iv_ruleIngredient=ruleIngredient
	{ $current=$iv_ruleIngredient.current; }
	EOF;

// Rule Ingredient
ruleIngredient returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Ingredient'
		{
			newLeafNode(otherlv_0, grammarAccess.getIngredientAccess().getIngredientKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getIngredientAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIngredientRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='amount'
		{
			newLeafNode(otherlv_2, grammarAccess.getIngredientAccess().getAmountKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIngredientAccess().getMeasureMeasureParserRuleCall_3_0());
				}
				lv_measure_3_0=ruleMeasure
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIngredientRule());
					}
					set(
						$current,
						"measure",
						lv_measure_3_0,
						"org.xtext.example.mydsl.RecipeDSL.Measure");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleMeasure
entryRuleMeasure returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMeasureRule()); }
	iv_ruleMeasure=ruleMeasure
	{ $current=$iv_ruleMeasure.current; }
	EOF;

// Rule Measure
ruleMeasure returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMeasureAccess().getWeightParserRuleCall_0());
		}
		this_Weight_0=ruleWeight
		{
			$current = $this_Weight_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMeasureAccess().getCountParserRuleCall_1());
		}
		this_Count_1=ruleCount
		{
			$current = $this_Count_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleWeight
entryRuleWeight returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWeightRule()); }
	iv_ruleWeight=ruleWeight
	{ $current=$iv_ruleWeight.current; }
	EOF;

// Rule Weight
ruleWeight returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Weight'
		{
			newLeafNode(otherlv_0, grammarAccess.getWeightAccess().getWeightKeyword_0());
		}
		(
			(
				lv_gramms_1_0=RULE_STRING
				{
					newLeafNode(lv_gramms_1_0, grammarAccess.getWeightAccess().getGrammsSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWeightRule());
					}
					setWithLastConsumed(
						$current,
						"gramms",
						lv_gramms_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleCount
entryRuleCount returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCountRule()); }
	iv_ruleCount=ruleCount
	{ $current=$iv_ruleCount.current; }
	EOF;

// Rule Count
ruleCount returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Count'
		{
			newLeafNode(otherlv_0, grammarAccess.getCountAccess().getCountKeyword_0());
		}
		(
			(
				lv_count_1_0=RULE_INT
				{
					newLeafNode(lv_count_1_0, grammarAccess.getCountAccess().getCountINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCountRule());
					}
					setWithLastConsumed(
						$current,
						"count",
						lv_count_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleDevice
entryRuleDevice returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeviceRule()); }
	iv_ruleDevice=ruleDevice
	{ $current=$iv_ruleDevice.current; }
	EOF;

// Rule Device
ruleDevice returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Device'
		{
			newLeafNode(otherlv_0, grammarAccess.getDeviceAccess().getDeviceKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDeviceAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDeviceRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleCooking
entryRuleCooking returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCookingRule()); }
	iv_ruleCooking=ruleCooking
	{ $current=$iv_ruleCooking.current; }
	EOF;

// Rule Cooking
ruleCooking returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Cooking'
		{
			newLeafNode(otherlv_0, grammarAccess.getCookingAccess().getCookingKeyword_0());
		}
		(
			(
				lv_order_1_0=RULE_ID
				{
					newLeafNode(lv_order_1_0, grammarAccess.getCookingAccess().getOrderIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCookingRule());
					}
					setWithLastConsumed(
						$current,
						"order",
						lv_order_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getCookingAccess().getTimeTimeParserRuleCall_2_0_0());
					}
					lv_time_2_0=ruleTime
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCookingRule());
						}
						set(
							$current,
							"time",
							lv_time_2_0,
							"org.xtext.example.mydsl.RecipeDSL.Time");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getCookingAccess().getStepStepParserRuleCall_2_1_0());
					}
					lv_step_3_0=ruleStep
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCookingRule());
						}
						add(
							$current,
							"step",
							lv_step_3_0,
							"org.xtext.example.mydsl.RecipeDSL.Step");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleTime
entryRuleTime returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTimeRule()); }
	iv_ruleTime=ruleTime
	{ $current=$iv_ruleTime.current; }
	EOF;

// Rule Time
ruleTime returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='For'
		{
			newLeafNode(otherlv_0, grammarAccess.getTimeAccess().getForKeyword_0());
		}
		(
			(
				lv_time_1_0=RULE_STRING
				{
					newLeafNode(lv_time_1_0, grammarAccess.getTimeAccess().getTimeSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTimeRule());
					}
					setWithLastConsumed(
						$current,
						"time",
						lv_time_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleStep
entryRuleStep returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStepRule()); }
	iv_ruleStep=ruleStep
	{ $current=$iv_ruleStep.current; }
	EOF;

// Rule Step
ruleStep returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Use'
		{
			newLeafNode(otherlv_0, grammarAccess.getStepAccess().getUseKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStepAccess().getDDeviceParserRuleCall_1_0());
				}
				lv_d_1_0=ruleDevice
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStepRule());
					}
					set(
						$current,
						"d",
						lv_d_1_0,
						"org.xtext.example.mydsl.RecipeDSL.Device");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='with'
		{
			newLeafNode(otherlv_2, grammarAccess.getStepAccess().getWithKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStepAccess().getIIngredientParserRuleCall_3_0());
				}
				lv_i_3_0=ruleIngredient
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStepRule());
					}
					set(
						$current,
						"i",
						lv_i_3_0,
						"org.xtext.example.mydsl.RecipeDSL.Ingredient");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
