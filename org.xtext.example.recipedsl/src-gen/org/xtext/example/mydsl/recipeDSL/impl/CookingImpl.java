/**
 * generated by Xtext 2.12.0
 */
package org.xtext.example.mydsl.recipeDSL.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;
import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.mydsl.recipeDSL.Cooking;
import org.xtext.example.mydsl.recipeDSL.RecipeDSLPackage;
import org.xtext.example.mydsl.recipeDSL.Step;
import org.xtext.example.mydsl.recipeDSL.Time;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Cooking</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.recipeDSL.impl.CookingImpl#getS <em>S</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.recipeDSL.impl.CookingImpl#getTime <em>Time</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.recipeDSL.impl.CookingImpl#getStep <em>Step</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CookingImpl extends MinimalEObjectImpl.Container implements Cooking
{
  /**
   * The cached value of the '{@link #getS() <em>S</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getS()
   * @generated
   * @ordered
   */
  protected EList<Integer> s;

  /**
   * The cached value of the '{@link #getTime() <em>Time</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTime()
   * @generated
   * @ordered
   */
  protected EList<Time> time;

  /**
   * The cached value of the '{@link #getStep() <em>Step</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStep()
   * @generated
   * @ordered
   */
  protected EList<Step> step;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CookingImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return RecipeDSLPackage.Literals.COOKING;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Integer> getS()
  {
    if (s == null)
    {
      s = new EDataTypeEList<Integer>(Integer.class, this, RecipeDSLPackage.COOKING__S);
    }
    return s;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Time> getTime()
  {
    if (time == null)
    {
      time = new EObjectContainmentEList<Time>(Time.class, this, RecipeDSLPackage.COOKING__TIME);
    }
    return time;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Step> getStep()
  {
    if (step == null)
    {
      step = new EObjectContainmentEList<Step>(Step.class, this, RecipeDSLPackage.COOKING__STEP);
    }
    return step;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case RecipeDSLPackage.COOKING__TIME:
        return ((InternalEList<?>)getTime()).basicRemove(otherEnd, msgs);
      case RecipeDSLPackage.COOKING__STEP:
        return ((InternalEList<?>)getStep()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case RecipeDSLPackage.COOKING__S:
        return getS();
      case RecipeDSLPackage.COOKING__TIME:
        return getTime();
      case RecipeDSLPackage.COOKING__STEP:
        return getStep();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case RecipeDSLPackage.COOKING__S:
        getS().clear();
        getS().addAll((Collection<? extends Integer>)newValue);
        return;
      case RecipeDSLPackage.COOKING__TIME:
        getTime().clear();
        getTime().addAll((Collection<? extends Time>)newValue);
        return;
      case RecipeDSLPackage.COOKING__STEP:
        getStep().clear();
        getStep().addAll((Collection<? extends Step>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case RecipeDSLPackage.COOKING__S:
        getS().clear();
        return;
      case RecipeDSLPackage.COOKING__TIME:
        getTime().clear();
        return;
      case RecipeDSLPackage.COOKING__STEP:
        getStep().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case RecipeDSLPackage.COOKING__S:
        return s != null && !s.isEmpty();
      case RecipeDSLPackage.COOKING__TIME:
        return time != null && !time.isEmpty();
      case RecipeDSLPackage.COOKING__STEP:
        return step != null && !step.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (s: ");
    result.append(s);
    result.append(')');
    return result.toString();
  }

} //CookingImpl
